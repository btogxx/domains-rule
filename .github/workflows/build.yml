name: Build domain rule
on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 4"
  push:
    branches:
      - master
    paths-ignore:
      - ".gitignore"
      - "LICENSE*"
      - "*.md"

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout codebase
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set variables
        run: |
          echo "TAG_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
          echo "RELEASE_NAME=$(date +%Y%m%d%H%M)" >> $GITHUB_ENV
        shell: bash
      
      - name: clone repository
        run: |
          git clone "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}" project
        shell: bash
          

      - name: update
        run: |
          project/update
          if [ -f "project/release.tar.gz" ]; then
            echo "RELEASE_EXISTS=true" >> $GITHUB_ENV
          else
            echo "RELEASE_EXISTS=false" >> $GITHUB_ENV
          fi
        shell: bash
    
      - name: Git push assets to "release" branch
        if: ${{ env.RELEASE_EXISTS == 'true' }}
        run: |
          cd project/release
          git init
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git checkout -b release
          git add -A
          git commit -m "${{ env.RELEASE_NAME }}"
          git remote add origin "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push -f -u origin release
          cd ../..
        shell: bash
  
      - name: Upload files to GitHub release
        if: ${{ env.RELEASE_EXISTS == 'true' }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file_glob: true
          file: project/release.tar.gz
          release_name: ${{ env.RELEASE_NAME }}
          tag: ${{ env.TAG_NAME }}
      
      - name: Git push update to "main" branch
        if: ${{ env.RELEASE_EXISTS == 'true' }}
        run: |
          cd project
          rm -rf release release.tar.gz
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add -A
          git commit -m "${{ env.RELEASE_NAME }}"
          git push origin main
        shell: bash

